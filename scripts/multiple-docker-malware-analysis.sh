#!/bin/bash

function usage()
{
    echo -n "
    Perform full Sysflow Analyis on executable. 

    Usage:
      ./multiple-docker-malware-analysis.sh --malwares-folder <MALWARES-FOLDER> 
                                            [--max-duration <MAX-DURATION>] 
                                            [--output <OUTPUT>] 
                                            [--override-dockerfile] 
                                            [--max-parallel-analysis <MAX-PARALLEL-ANALYSIS>]

    Options:
      --help                                            Show this screen
      --malwares-folder <MALWARES-FOLDER>               The path of the executables to analyze
      --max-duration <MAX-DURATION>                     [optional] The max duration in seconds to perform Sysflow Analysis
                                                        If not defined defaults to 1 hour.
      --output <OUTPUT>                                 [optional] The base folder to save analysis outputs
                                                        If not defined defaults to /data/results/.   
      --override-dockerfile                             [optional] Override the Dockerfile
      --max-parallel-analysis <MAX-PARALLEL-ANALYSIS>   [optional] The number of malware to analyze in parallel
                                                        If Not Defined defaults to 10 
    "
    echo
}

function parse_args()
{
    if [[ "$#" -eq 0 ]]; then
        usage
        exit 1
    fi

    while (( "$#" )); do
        case "$1" in
            --malwares-folder)
            MALWARES_FOLDER="$2"
            shift 2
            ;;
            --max-duration)
            DURATION="$2"
            shift 2
            ;;
            --max-parallel-analysis)
            MAX_RUNNING_JOBS="$2"
            shift 2
            ;;
            --help)
            usage
            exit 0
            ;;
            --) # end argument parsing
            shift
            break
            ;;
            *) # preserve positional arguments
            PARAMS="$PARAMS $1"
            shift
            ;;
        esac
    done
}

function validate()
{
    if [[ -z ${MALWARES_FOLDER} ]]; 
    then
        usage
        exit 0
    fi
}

function running_jobs() {
    local __RESULTVAR=$1
    local __JOBS=`jobs -r -p`    
    local __JOBS_COUNTER=0
    for JOB in $__JOBS
    do
      ((__JOBS_COUNTER=__JOBS_COUNTER+1))
    done
    eval $__RESULTVAR="'$__JOBS_COUNTER'"
}

parse_args "$@"
validate

DEFAULT_MAX_RUNNING_JOBS=10
SCRIPT_FOLDER=$(dirname $(readlink -f "$0"))
MAX_RUNNING_JOBS=${MAX_RUNNING_JOBS:-$DEFAULT_MAX_RUNNING_JOBS}

MALWARE_FILE_NAMES=`ls $MALWARES_FOLDER -p -I "*.Dockerfile" | grep -v /`
declare -a MALWARES
for MALWARE in $MALWARE_FILE_NAMES
do
  MALWARES+=($MALWARE)
done
TOTAL_MALWARES_COUNTER=${#MALWARES[@]}
NEXT_MALWARE_INDEX=0

while [ $NEXT_MALWARE_INDEX -lt $TOTAL_MALWARES_COUNTER ]
do
  running_jobs RUNNING_JOBS
  if [ $RUNNING_JOBS -lt $MAX_RUNNING_JOBS ]; 
  then
    NEXT_JOBS_COUNTER=$((MAX_RUNNING_JOBS - RUNNING_JOBS))
    LIMIT=$((NEXT_MALWARE_INDEX + NEXT_JOBS_COUNTER > TOTAL_MALWARES_COUNTER ? TOTAL_MALWARES_COUNTER : NEXT_JOBS_COUNTER + NEXT_MALWARE_INDEX))
    for INDEX in $( seq $NEXT_MALWARE_INDEX $((LIMIT - 1)));
    do
      EXECUTABLE=${MALWARES[INDEX]}
      echo "Starting to analysis ${MALWARES_FOLDER}/${EXECUTABLE}"
      ${SCRIPT_FOLDER}/single-docker-malware-analysis.sh --executable ${MALWARES_FOLDER}/${EXECUTABLE} $PARAMS 1>/dev/null &
      sleep 1
    done
    NEXT_MALWARE_INDEX=$LIMIT
  fi
  sleep 5
done